{"nbformat":4,"nbformat_minor":5,"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"colab":{"name":"Keras-Seq2Seq.ipynb-V2","provenance":[{"file_id":"10Z2NcwruxPj3Zq-h6ZCIBh5jtG9_dKNw","timestamp":1627428694725}],"collapsed_sections":[]},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"0d97f396646a4f008662d52e6b2032fc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_773e9125b5694564bfc791d85bd35ab3","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_41d0aee1b3e14764b30a49aa7d44a88d","IPY_MODEL_ad4f4a4701e140649c0ed107500ba5ca"]}},"773e9125b5694564bfc791d85bd35ab3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"41d0aee1b3e14764b30a49aa7d44a88d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_894001be032a4f68886163ab86fdb169","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":257706,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":257706,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3dd0dd7a73834377ae4594ad35864152"}},"ad4f4a4701e140649c0ed107500ba5ca":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_7c0c573ee955408b862d85446c02f3fe","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 258k/258k [00:00&lt;00:00, 308kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d936d9dadc3449ef9a196815451f3710"}},"894001be032a4f68886163ab86fdb169":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"3dd0dd7a73834377ae4594ad35864152":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7c0c573ee955408b862d85446c02f3fe":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d936d9dadc3449ef9a196815451f3710":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3f1bc3dce231403090720986c738c306":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_a2c1ad22d76f4eeea9fb4544a30d3376","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_7ca9b27aec244cdabe9395b5c396244b","IPY_MODEL_35c02af2301e452383021b430b050272"]}},"a2c1ad22d76f4eeea9fb4544a30d3376":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7ca9b27aec244cdabe9395b5c396244b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_d432dd510b5c4099b4a8bd9a803bf1e6","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":110,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":110,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_b81ab59d2c3b4067b8ee479536b42109"}},"35c02af2301e452383021b430b050272":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_f87238811cc24f77b46404ad9763a8a7","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 110/110 [00:00&lt;00:00, 535B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_95453da93fda47e989acc655b14a30da"}},"d432dd510b5c4099b4a8bd9a803bf1e6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"b81ab59d2c3b4067b8ee479536b42109":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"f87238811cc24f77b46404ad9763a8a7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"95453da93fda47e989acc655b14a30da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KK4aJbMtJmIz","executionInfo":{"status":"ok","timestamp":1627544763935,"user_tz":-540,"elapsed":13285,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"4f86e230-652d-423f-eb5e-70452baaeb18"},"source":["!pip install transformers==4.5.0 fugashi==1.1.0 ipadic==1.0.0"],"id":"KK4aJbMtJmIz","execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting transformers==4.5.0\n","  Downloading transformers-4.5.0-py3-none-any.whl (2.1 MB)\n","\u001b[K     |████████████████████████████████| 2.1 MB 4.8 MB/s \n","\u001b[?25hCollecting fugashi==1.1.0\n","  Downloading fugashi-1.1.0-cp37-cp37m-manylinux1_x86_64.whl (486 kB)\n","\u001b[K     |████████████████████████████████| 486 kB 23.9 MB/s \n","\u001b[?25hCollecting ipadic==1.0.0\n","  Downloading ipadic-1.0.0.tar.gz (13.4 MB)\n","\u001b[K     |████████████████████████████████| 13.4 MB 194 kB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (4.41.1)\n","Collecting sacremoses\n","  Downloading sacremoses-0.0.45-py3-none-any.whl (895 kB)\n","\u001b[K     |████████████████████████████████| 895 kB 53.6 MB/s \n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (21.0)\n","Collecting tokenizers<0.11,>=0.10.1\n","  Downloading tokenizers-0.10.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.3 MB)\n","\u001b[K     |████████████████████████████████| 3.3 MB 51.3 MB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (3.0.12)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (2.23.0)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (1.19.5)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (4.6.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (2019.12.20)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers==4.5.0) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers==4.5.0) (3.5.0)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers==4.5.0) (2.4.7)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (2021.5.30)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (1.24.3)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (1.0.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (7.1.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (1.15.0)\n","Building wheels for collected packages: ipadic\n","  Building wheel for ipadic (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ipadic: filename=ipadic-1.0.0-py3-none-any.whl size=13556723 sha256=358289333ab8fbb782c00a08fb6625c5386e22a365a93fb052b937083c7eefa4\n","  Stored in directory: /root/.cache/pip/wheels/33/8b/99/cf0d27191876637cd3639a560f93aa982d7855ce826c94348b\n","Successfully built ipadic\n","Installing collected packages: tokenizers, sacremoses, transformers, ipadic, fugashi\n","Successfully installed fugashi-1.1.0 ipadic-1.0.0 sacremoses-0.0.45 tokenizers-0.10.3 transformers-4.5.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ORL3IdiSJ0tm","executionInfo":{"status":"ok","timestamp":1627544768003,"user_tz":-540,"elapsed":4071,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["from transformers import BertJapaneseTokenizer, BertModel"],"id":"ORL3IdiSJ0tm","execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"_h5NWfrcJ8QB","colab":{"base_uri":"https://localhost:8080/","height":115,"referenced_widgets":["0d97f396646a4f008662d52e6b2032fc","773e9125b5694564bfc791d85bd35ab3","41d0aee1b3e14764b30a49aa7d44a88d","ad4f4a4701e140649c0ed107500ba5ca","894001be032a4f68886163ab86fdb169","3dd0dd7a73834377ae4594ad35864152","7c0c573ee955408b862d85446c02f3fe","d936d9dadc3449ef9a196815451f3710","3f1bc3dce231403090720986c738c306","a2c1ad22d76f4eeea9fb4544a30d3376","7ca9b27aec244cdabe9395b5c396244b","35c02af2301e452383021b430b050272","d432dd510b5c4099b4a8bd9a803bf1e6","b81ab59d2c3b4067b8ee479536b42109","f87238811cc24f77b46404ad9763a8a7","95453da93fda47e989acc655b14a30da"]},"executionInfo":{"status":"ok","timestamp":1627544769144,"user_tz":-540,"elapsed":1157,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"8c020d01-15cc-404f-8eb0-974d3a955131"},"source":["tokenizer = BertJapaneseTokenizer.from_pretrained(\"cl-tohoku/bert-base-japanese-whole-word-masking\")"],"id":"_h5NWfrcJ8QB","execution_count":3,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0d97f396646a4f008662d52e6b2032fc","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=257706.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3f1bc3dce231403090720986c738c306","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=110.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"d10aaa01-d57a-4679-8fcb-8481da434324","executionInfo":{"status":"ok","timestamp":1627544770455,"user_tz":-540,"elapsed":1315,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["import pickle\n","import numpy as np\n","import pandas as pd\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","# from tensorflow.keras.layers.experimental.preprocessing import TextVectorization\n","from tensorflow.keras import preprocessing as pp"],"id":"d10aaa01-d57a-4679-8fcb-8481da434324","execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"BvUGfay8N7Ld","executionInfo":{"status":"ok","timestamp":1627544770455,"user_tz":-540,"elapsed":4,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["import re"],"id":"BvUGfay8N7Ld","execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bZrw0fTg2Yse","executionInfo":{"status":"ok","timestamp":1627544863256,"user_tz":-540,"elapsed":92804,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"40823b4a-01ed-457d-84d3-ca5a974b04e9"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"id":"bZrw0fTg2Yse","execution_count":6,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B9hxD4NT2fy9","executionInfo":{"status":"ok","timestamp":1627544863256,"user_tz":-540,"elapsed":6,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"5edf0654-a824-457a-b2ee-98a02c175981"},"source":["cd drive/MyDrive/"],"id":"B9hxD4NT2fy9","execution_count":7,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GLFf6DUY22iQ","executionInfo":{"status":"ok","timestamp":1627544863256,"user_tz":-540,"elapsed":3,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"a560473f-1410-41b6-e2c4-1ddef9633e9c"},"source":["ls | grep weight"],"id":"GLFf6DUY22iQ","execution_count":8,"outputs":[{"output_type":"stream","text":["transformer_weight_berttkn.h5\n","transformer_weight.h5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_PyUQh__2W7D","executionInfo":{"status":"ok","timestamp":1627544865118,"user_tz":-540,"elapsed":1864,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["with open(\"./datasets.bin\", \"rb\") as f:\n","  datasets = pickle.load(f)"],"id":"_PyUQh__2W7D","execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0lOpESUYlHwP","executionInfo":{"status":"ok","timestamp":1627544865119,"user_tz":-540,"elapsed":10,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"0737a3de-1230-43da-d9ab-0d4aaf1d3535"},"source":["len(datasets)"],"id":"0lOpESUYlHwP","execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10974"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tesuiiKb28dT","executionInfo":{"status":"ok","timestamp":1627544867677,"user_tz":-540,"elapsed":195,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"055d9137-91a2-4689-d644-dee529e2406e"},"source":["print(datasets[0][0])\n","print()\n","print(datasets[0][1])"],"id":"tesuiiKb28dT","execution_count":11,"outputs":[{"output_type":"stream","text":["お笑いトリオ・安田大サーカスのクロちゃん(44)の所属事務所・松竹芸能は19日、クロちゃんが新型コロナウイルスに感染したことを報告した。【写真】1回目のワクチン接種後には…体温計の写真とともに経過を報告した団長安田サイトでは「7月18日夜の仕事前、体調に違和感と悪寒を感じたため、体温計測したところ37.5度あり、発熱外来を受診、新型コロナウイルスPCR検査を受けた結果、同日深夜に陽性と診断されました」と説明。「今後は保健所の指示に従い適切に対処してまいります」とした。今月15日には、団長安田(47)の新型コロナウイルス感染を公表。「先日感染をご報告させていただきました、団長安田とは直近での接触はなく、保健所からも濃厚接触者には認定されていない為、別ルートでの感染と考えられます」と伝え「この度は仕事関係者・共演者の皆様、いつも応援して下さっている皆様に多大なるご迷惑とご心配をお掛けしていることを、心よりお詫び申し上げます」と記した。最後は「弊社は引き続き、行政機関、医療機関の指導のもと、体調管理の徹底、所属タレントおよび社員、関係各位への感染防止を優先し、新型コロナウイルスの感染予防、拡大防止対策を徹底してまいります」とコメントしている。\n","\n","安田大サーカス・クロちゃん、新型コロナ感染団長安田とは「別ルートでの感染と考えられます」\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ve19Ro6CmV9T","executionInfo":{"status":"ok","timestamp":1627544875805,"user_tz":-540,"elapsed":202,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"66f820b8-3856-4fa1-d125-1136a7d3e858"},"source":["\" \".join(tokenizer.tokenize(datasets[0][1]))"],"id":"ve19Ro6CmV9T","execution_count":12,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'安田 大 サーカス ・ クロ ちゃん 、 新型 コロナ 感染 団長 安田 と は 「 別 ルート で の 感染 と 考え られ ます 」'"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H2Ry_izYlq-r","executionInfo":{"status":"ok","timestamp":1627545214639,"user_tz":-540,"elapsed":30948,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"5f8dd409-3905-4a13-bd0b-4d7b1f4f660f"},"source":["context = [\" \".join(tokenizer.tokenize(d[0])) for d in datasets]\n","title = [\"[CLS] \" + \" \".join(tokenizer.tokenize(d[1])) + \" [SEP]\" for d in datasets]\n","print(context[0])\n","print(title[0])"],"id":"H2Ry_izYlq-r","execution_count":40,"outputs":[{"output_type":"stream","text":["お笑い トリオ ・ 安田 大 サーカス の クロ ちゃん ( 44 ) の 所属 事務所 ・ 松竹 芸能 は 19 日 、 クロ ちゃん が 新型 コロナ ウイルス に 感染 し た こと を 報告 し た 。 【 写真 】 1 回 目 の ワクチン 接種 後 に は ... 体温 ##計 の 写真 とともに 経過 を 報告 し た 団長 安田 サイト で は 「 7 月 18 日 夜 の 仕事 前 、 体調 に 違和感 と 悪 ##寒 を 感じ た ため 、 体温 計測 し た ところ 37 . 5 度 あり 、 発熱 外来 を 受 ##診 、 新型 コロナ ウイルス PC ##R 検査 を 受け た 結果 、 同日 深夜 に 陽性 と 診断 さ れ まし た 」 と 説明 。 「 今後 は 保健 ##所 の 指示 に従い 適切 に 対処 し て まい ##り ます 」 と し た 。 今 ##月 15 日 に は 、 団長 安田 ( 47 ) の 新型 コロナ ウイルス 感染 を 公表 。 「 先 ##日 感染 を ご 報告 さ せ て いただ ##き まし た 、 団長 安田 と は 直近 で の 接触 は なく 、 保健 ##所 から も 濃厚 接触 者 に は 認定 さ れ て い ない 為 、 別 ルート で の 感染 と 考え られ ます 」 と 伝え 「 この 度 は 仕事 関係 者 ・ 共演 者 の 皆 ##様 、 いつも 応援 し て 下さ ##っ て いる 皆 ##様 に 多大 なる ご 迷惑 と ご 心配 を お 掛け し て いる こと を 、 心 より お ##詫び 申し ##上げ ます 」 と 記し た 。 最後 は 「 弊 ##社 は 引き続き 、 行政 機関 、 医療 機関 の 指導 の もと 、 体調 管理 の 徹底 、 所属 タレント および 社員 、 関係 各 ##位 へ の 感染 防止 を 優先 し 、 新型 コロナ ウイルス の 感染 予防 、 拡大 防止 対策 を 徹底 し て まい ##り ます 」 と コメント し て いる 。\n","[CLS] 安田 大 サーカス ・ クロ ちゃん 、 新型 コロナ 感染 団長 安田 と は 「 別 ルート で の 感染 と 考え られ ます 」 [SEP]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f1dc058f-aa26-4f99-b514-69638d30f236","executionInfo":{"status":"ok","timestamp":1627545223071,"user_tz":-540,"elapsed":189,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"6fc2455d-a915-4ebb-9087-a65a76a968d1"},"source":["len(context), len(title)"],"id":"f1dc058f-aa26-4f99-b514-69638d30f236","execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(10974, 10974)"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"87f55129-0acc-48d8-8e4c-fc64982def53","executionInfo":{"status":"ok","timestamp":1627545230735,"user_tz":-540,"elapsed":6342,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["keras_tokenizer = pp.text.Tokenizer(filters=\"\", lower=False)\n","keras_tokenizer.fit_on_texts(context + title)\n","# keras_tokenizer.word_index = dict(tokenizer.vocab)\n","# keras_tokenizer.index_word = {idx: word for word,idx in keras_tokenizer.word_index.items()}"],"id":"87f55129-0acc-48d8-8e4c-fc64982def53","execution_count":42,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"31631ddc-b84e-4be3-b56a-b6fbe4309565","executionInfo":{"status":"ok","timestamp":1627545239705,"user_tz":-540,"elapsed":194,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"4fe74331-8fc2-4c79-9bb9-5f7b6b1ab294"},"source":["len(keras_tokenizer.word_index)"],"id":"31631ddc-b84e-4be3-b56a-b6fbe4309565","execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28231"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"ee7ce94c-2f0e-49fe-83c8-49c08de8384c","executionInfo":{"status":"ok","timestamp":1627545261382,"user_tz":-540,"elapsed":5454,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["X = keras_tokenizer.texts_to_sequences(context)\n","y = keras_tokenizer.texts_to_sequences(title)"],"id":"ee7ce94c-2f0e-49fe-83c8-49c08de8384c","execution_count":44,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ae385e2-9876-454e-b284-2ac7ee367de9","executionInfo":{"status":"ok","timestamp":1627545261383,"user_tz":-540,"elapsed":9,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"942121e3-3da0-405a-c3aa-90a74b186685"},"source":["[keras_tokenizer.index_word[idx] for idx in X[0][0:100]], \"->\" , [keras_tokenizer.index_word[idx] for idx in y[0][0:10]]"],"id":"5ae385e2-9876-454e-b284-2ac7ee367de9","execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(['お笑い',\n","  'トリオ',\n","  '・',\n","  '安田',\n","  '大',\n","  'サーカス',\n","  'の',\n","  'クロ',\n","  'ちゃん',\n","  '(',\n","  '44',\n","  ')',\n","  'の',\n","  '所属',\n","  '事務所',\n","  '・',\n","  '松竹',\n","  '芸能',\n","  'は',\n","  '19',\n","  '日',\n","  '、',\n","  'クロ',\n","  'ちゃん',\n","  'が',\n","  '新型',\n","  'コロナ',\n","  'ウイルス',\n","  'に',\n","  '感染',\n","  'し',\n","  'た',\n","  'こと',\n","  'を',\n","  '報告',\n","  'し',\n","  'た',\n","  '。',\n","  '【',\n","  '写真',\n","  '】',\n","  '1',\n","  '回',\n","  '目',\n","  'の',\n","  'ワクチン',\n","  '接種',\n","  '後',\n","  'に',\n","  'は',\n","  '...',\n","  '体温',\n","  '##計',\n","  'の',\n","  '写真',\n","  'とともに',\n","  '経過',\n","  'を',\n","  '報告',\n","  'し',\n","  'た',\n","  '団長',\n","  '安田',\n","  'サイト',\n","  'で',\n","  'は',\n","  '「',\n","  '7',\n","  '月',\n","  '18',\n","  '日',\n","  '夜',\n","  'の',\n","  '仕事',\n","  '前',\n","  '、',\n","  '体調',\n","  'に',\n","  '違和感',\n","  'と',\n","  '悪',\n","  '##寒',\n","  'を',\n","  '感じ',\n","  'た',\n","  'ため',\n","  '、',\n","  '体温',\n","  '計測',\n","  'し',\n","  'た',\n","  'ところ',\n","  '37',\n","  '.',\n","  '5',\n","  '度',\n","  'あり',\n","  '、',\n","  '発熱',\n","  '外来'],\n"," '->',\n"," ['[CLS]', '安田', '大', 'サーカス', '・', 'クロ', 'ちゃん', '、', '新型', 'コロナ'])"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"id":"f764185b-e515-4261-bd26-6277dc0d9cda","executionInfo":{"status":"ok","timestamp":1627545263449,"user_tz":-540,"elapsed":875,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["ENC_SEQ_LEN = 600\n","DEC_SEQ_LEN = 40\n","X = pp.sequence.pad_sequences(X, maxlen=ENC_SEQ_LEN, padding=\"post\", truncating=\"post\")\n","y = pp.sequence.pad_sequences(y, maxlen=DEC_SEQ_LEN+1, padding=\"post\", truncating=\"post\")"],"id":"f764185b-e515-4261-bd26-6277dc0d9cda","execution_count":46,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eaa7c9be-fd84-41ad-9da1-9bade138d413","executionInfo":{"status":"ok","timestamp":1627545265149,"user_tz":-540,"elapsed":190,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"7c0a202a-0fb7-4b73-b771-39041d5f6366"},"source":["encoder_inputs_X = X\n","decoder_inputs_Y = y[:,:-1]\n","decoder_outputs_Y = y[:,1:]\n","print(encoder_inputs_X.shape, decoder_inputs_Y.shape, decoder_outputs_Y.shape)"],"id":"eaa7c9be-fd84-41ad-9da1-9bade138d413","execution_count":47,"outputs":[{"output_type":"stream","text":["(10974, 600) (10974, 40) (10974, 40)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"67397e93-c877-440d-b86e-1623a3d76c1e","executionInfo":{"status":"ok","timestamp":1627545410083,"user_tz":-540,"elapsed":205,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"c14bcbee-2174-4ec4-f126-c3e90b5c0d03"},"source":["encoder_inputs_X[0]"],"id":"67397e93-c877-440d-b86e-1623a3d76c1e","execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2561, 13113,    31, 10758,   122, 20793,     1,  1650,   374,\n","          20,  3355,    25,     1,  1601,  1430,    31, 19933,  1710,\n","           7,   584,    34,     2,  1650,   374,     6,   318,   175,\n","         605,     4,   263,    12,     9,    22,     5,   902,    12,\n","           9,     3,   132,   156,   110,    36,   184,   142,     1,\n","         412,   426,   145,     4,     7,   176,  5523,  2188,     1,\n","         156,  1107,  5758,     5,   902,    12,     9, 17272, 10758,\n","         541,    11,     7,    13,   109,    49,   539,    34,   794,\n","           1,   230,   120,     2,  2914,     4,  3791,    10,  1444,\n","       11438,     5,   177,     9,    80,     2,  5523,  9933,    12,\n","           9,   194,  2544,    61,    85,   213,    52,     2,  7513,\n","       13396,     5,  5700,  7415,     2,   318,   175,   605,  2532,\n","         795,  1363,     5,   267,     9,   302,     2,  3715,  2768,\n","           4,  3048,    10,  3573,    24,    28,    38,     9,    14,\n","          10,   555,     3,    13,   670,     7,  4511,  3806,     1,\n","        3670, 14941,  4429,     4,  3926,    12,     8,  2346,   101,\n","          18,    14,    10,    12,     9,     3,   133,   944,   369,\n","          34,     4,     7,     2, 17272, 10758,    20,  2921,    25,\n","           1,   318,   175,   605,   263,     5,  2922,     3,    13,\n","         295,  1211,   263,     5,   115,   902,    24,   144,     8,\n","         425,   211,    38,     9,     2, 17272, 10758,    10,     7,\n","        8052,    11,     1,  2959,     7,    83,     2,  4511,  3806,\n","          27,    15,   900,  2959,    66,     4,     7,  4430,    24,\n","          28,     8,    23,    21,  6591,     2,   473,  6884,    11,\n","           1,   263,    10,   216,    84,    18,    14,    10,   646,\n","          13,    58,   213,     7,   230,   193,    66,    31,  3955,\n","          66,     1,   938,  1068,     2,   810,  1869,    12,     8,\n","        9388,    93,     8,    19,   938,  1068,     4, 12694,    59,\n","         115,  2615,    10,   115,  1182,     5,    42,  3998,    12,\n","           8,    19,    22,     5,     2,   269,   121,    42,  7129,\n","        1745,  1284,    18,    14,    10,  6666,     9,     3,   593,\n","           7,    13,  6774,  1729,     7,  4468,     2,  4663,  1856,\n","           2,  1479,  1856,     1,  2966,     1,  1754,     2,  2914,\n","        1061,     1,  3688,     2,  1601,  1927,  3220,  1666,     2,\n","         193,   736,  9766,   112,     1,   263,  1884,     5,  2894,\n","          12,     2,   318,   175,   605,     1,   263,  2974,     2,\n","        1055,  1884,   607,     5,  3688,    12,     8,  2346,   101,\n","          18,    14,    10,   395,    12,     8,    19,     3,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qcKsdyEGLBDD","executionInfo":{"status":"ok","timestamp":1627545413075,"user_tz":-540,"elapsed":205,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"eba5e857-2217-4aec-97e6-e5e4a07adfb1"},"source":["decoder_inputs_Y[0]"],"id":"qcKsdyEGLBDD","execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([   69, 10758,   122, 20793,    31,  1650,   374,     2,   318,\n","         175,   263, 17272, 10758,    10,     7,    13,   473,  6884,\n","          11,     1,   263,    10,   216,    84,    18,    14,    70,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5cff1ed-a39d-47a8-b46f-c34de79946a6","executionInfo":{"status":"ok","timestamp":1627545413761,"user_tz":-540,"elapsed":5,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"4b82d25c-8618-49c9-aa57-4c99f1662f0b"},"source":["decoder_outputs_Y[0]"],"id":"e5cff1ed-a39d-47a8-b46f-c34de79946a6","execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([10758,   122, 20793,    31,  1650,   374,     2,   318,   175,\n","         263, 17272, 10758,    10,     7,    13,   473,  6884,    11,\n","           1,   263,    10,   216,    84,    18,    14,    70,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":53}]},{"cell_type":"code","metadata":{"id":"66b7261a-bd8e-4e53-8ebc-a7a6e23dced9","executionInfo":{"status":"ok","timestamp":1627545414439,"user_tz":-540,"elapsed":1,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["# BATCH_SIZE = 64\n","# class TransformerEncoder(layers.Layer):\n","#     def __init__(self, embed_dim, dense_dim, num_heads, **kwargs):\n","#         super(TransformerEncoder, self).__init__(**kwargs)\n","#         self.embed_dim = embed_dim\n","#         self.dense_dim = dense_dim\n","#         self.num_heads = num_heads\n","#         self.attention = layers.MultiHeadAttention(\n","#             num_heads=num_heads, key_dim=embed_dim\n","#         )\n","#         self.dense_proj = keras.Sequential(\n","#             [layers.Dense(dense_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","#         )\n","#         self.layernorm_1 = layers.LayerNormalization()\n","#         self.layernorm_2 = layers.LayerNormalization()\n","#         self.supports_masking = True\n","\n","#     def call(self, inputs, mask=None):\n","#         if mask is not None:\n","#             padding_mask = tf.cast(mask[:, tf.newaxis, tf.newaxis, :], dtype=\"int32\")\n","#         attention_output = self.attention(\n","#             query=inputs, value=inputs, key=inputs, attention_mask=padding_mask\n","#         )\n","#         proj_input = self.layernorm_1(inputs + attention_output)\n","#         proj_output = self.dense_proj(proj_input)\n","#         return self.layernorm_2(proj_input + proj_output)\n","\n","\n","# class PositionalEmbedding(layers.Layer):\n","#     def __init__(self, sequence_length, vocab_size, embed_dim, **kwargs):\n","#         super(PositionalEmbedding, self).__init__(**kwargs)\n","#         self.token_embeddings = layers.Embedding(\n","#             input_dim=vocab_size, output_dim=embed_dim\n","#         )\n","#         self.position_embeddings = layers.Embedding(\n","#             input_dim=sequence_length, output_dim=embed_dim\n","#         )\n","#         self.sequence_length = sequence_length\n","#         self.vocab_size = vocab_size\n","#         self.embed_dim = embed_dim\n","\n","#     def call(self, inputs):\n","#         length = tf.shape(inputs)[-1]\n","#         positions = tf.range(start=0, limit=length, delta=1)\n","#         embedded_tokens = self.token_embeddings(inputs)\n","#         embedded_positions = self.position_embeddings(positions)\n","#         return embedded_tokens + embedded_positions\n","\n","#     def compute_mask(self, inputs, mask=None):\n","#         return tf.math.not_equal(inputs, 0)\n","\n","\n","# class TransformerDecoder(layers.Layer):\n","#     def __init__(self, embed_dim, latent_dim, num_heads, **kwargs):\n","#         super(TransformerDecoder, self).__init__(**kwargs)\n","#         self.embed_dim = embed_dim\n","#         self.latent_dim = latent_dim\n","#         self.num_heads = num_heads\n","#         self.attention_1 = layers.MultiHeadAttention(\n","#             num_heads=num_heads, key_dim=embed_dim\n","#         )\n","#         self.attention_2 = layers.MultiHeadAttention(\n","#             num_heads=num_heads, key_dim=embed_dim\n","#         )\n","#         self.dense_proj = keras.Sequential(\n","#             [layers.Dense(latent_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","#         )\n","#         self.layernorm_1 = layers.LayerNormalization()\n","#         self.layernorm_2 = layers.LayerNormalization()\n","#         self.layernorm_3 = layers.LayerNormalization()\n","#         self.supports_masking = True\n","\n","#     def call(self, inputs, encoder_outputs, mask=None):\n","#         # print(\"inputs: \", inputs.shape)\n","#         causal_mask = self.get_causal_attention_mask(inputs)\n","#         # print(\"casual_mask: \", causal_mask.shape)\n","#         if mask is not None:\n","#             padding_mask = tf.cast(mask[:, tf.newaxis, :], dtype=\"int32\")\n","#             print(\"padding_mask: \", padding_mask.shape)\n","#             print(\"causal_mask: \", causal_mask.shape)\n","#             # なぜminimum?\n","#             padding_mask = tf.minimum(padding_mask, causal_mask)\n","#             print(\"padding_mask: \", padding_mask.shape)\n","#             # attention_maskのshapeは(batch, query_seq_len, key_or_value_seq_len)\n","#             # padding_mask = tf.reshape(padding_mask, shape=(inputs.shape[1], inputs.shape[1]))\n","#         # print(\"padding_mask: \", padding_mask.shape)\n","#         attention_output_1 = self.attention_1(\n","#             inputs, inputs,\n","#             # query=inputs, value=inputs, key=inputs,\n","#             attention_mask=causal_mask\n","#         )\n","#         # print(\"attention_out1: \", attention_output_1.shape)\n","#         out_1 = self.layernorm_1(inputs + attention_output_1)\n","#         # print(\"out_1: \", out_1.shape)\n","#         # print(\"encoder_out: \", encoder_outputs.shape)\n","#         ### ここでエラーが起きてる\n","#         attention_output_2 = self.attention_2(\n","#             out_1, encoder_outputs,\n","#             # query=out_1,\n","#             # value=encoder_outputs,\n","#             # key=encoder_outputs,\n","#             attention_mask=padding_mask,\n","#         )\n","#         # print(\"attention_out2: \", attention_output_2.shape)\n","#         out_2 = self.layernorm_2(out_1 + attention_output_2)\n","#         # print(\"out_2\", out_2.shape)\n","\n","#         proj_output = self.dense_proj(out_2)\n","#         return self.layernorm_3(out_2 + proj_output)\n","\n","#     def get_causal_attention_mask(self, inputs):\n","#         input_shape = tf.shape(inputs)\n","#         target_shape = tf.shape(encoder_out)\n","#         # batch_size, sequence_length = input_shape[0], input_shape[1]\n","#         i = tf.range(sequence_length)[:, tf.newaxis]\n","#         j = tf.range(sequence_length)\n","#         mask = tf.cast(i >= j, dtype=\"int32\")\n","#         mask = tf.reshape(mask, (1, input_shape[1], input_shape[1]))\n","#         mult = tf.concat(\n","#             [tf.expand_dims(batch_size, -1), tf.constant([1, 1], dtype=tf.int32)],\n","#             axis=0,\n","#         )\n","#         return tf.tile(mask, mult)\n"],"id":"66b7261a-bd8e-4e53-8ebc-a7a6e23dced9","execution_count":54,"outputs":[]},{"cell_type":"code","metadata":{"id":"5649233f-e262-47bc-8cec-d1930f0f1deb","executionInfo":{"status":"ok","timestamp":1627545415460,"user_tz":-540,"elapsed":2,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["# embed_dim = 128\n","# latent_dim = 256\n","# num_heads = 2\n","# vocab_size = len(keras_tokenizer.word_index) + 1\n","\n","# # (batch, 400)\n","# encoder_inputs = keras.Input(shape=(ENC_SEQ_LEN,), dtype=\"int64\", name=\"encoder_inputs\")\n","# # (batch, 400, 128)\n","# x = PositionalEmbedding(ENC_SEQ_LEN, vocab_size, embed_dim)(encoder_inputs)\n","# # (batch, 400, 128)\n","# encoder_outputs = TransformerEncoder(embed_dim, latent_dim, num_heads)(x)\n","# # model\n","# encoder = keras.Model(encoder_inputs, encoder_outputs)\n","\n","# # teacher-forcing\n","# # (batch, 40)\n","# decoder_inputs = keras.Input(shape=(DEC_SEQ_LEN,), dtype=\"int64\", name=\"decoder_inputs\")\n","# # (batch, 400, 128)\n","# encoded_seq_inputs = keras.Input(shape=(ENC_SEQ_LEN, embed_dim), name=\"decoder_state_inputs\")\n","# # (batch, 40, 128)\n","# x = PositionalEmbedding(DEC_SEQ_LEN, vocab_size, embed_dim)(decoder_inputs)\n","# # (batch, 40, 128)\n","# x = TransformerDecoder(embed_dim, latent_dim, num_heads)(x, encoded_seq_inputs)\n","# x = layers.Dropout(0.5)(x)\n","# decoder_outputs = layers.Dense(vocab_size, activation=\"softmax\")(x)\n","# decoder = keras.Model([decoder_inputs, encoded_seq_inputs], decoder_outputs)\n","\n","# decoder_outputs = decoder([decoder_inputs, encoder_outputs])\n","# transformer = keras.Model(\n","#     [encoder_inputs, decoder_inputs], decoder_outputs, name=\"transformer\"\n","# )"],"id":"5649233f-e262-47bc-8cec-d1930f0f1deb","execution_count":55,"outputs":[]},{"cell_type":"code","metadata":{"id":"-kevYDFELHBB","executionInfo":{"status":"ok","timestamp":1627545418286,"user_tz":-540,"elapsed":180,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["def create_masking(inputs):\n","  enc_inputs, dec_inputs = inputs\n","  def create_padding_mask(seq):\n","    seq = tf.cast(tf.math.equal(seq, 0), tf.float32)\n","    # アテンション・ロジットにパディングを追加するため\n","    # さらに次元を追加する\n","    return seq[:, tf.newaxis, tf.newaxis, :]  # (batch_size, 1, 1, seq_len)\n","\n","  def create_look_ahead_mask(size):\n","    mask = 1 - tf.linalg.band_part(tf.ones((size, size)), -1, 0)\n","    return mask  # (seq_len, seq_len)\n","    \n","  def create_masks(inp, tar):\n","    # Encoderパディング・マスク\n","    enc_padding_mask = create_padding_mask(inp)\n","    # デコーダーの 2つ目のアテンション・ブロックで使用\n","    # このパディング・マスクはエンコーダーの出力をマスクするのに使用\n","    dec_padding_mask = create_padding_mask(inp)\n","    # デコーダーの 1つ目のアテンション・ブロックで使用\n","    # デコーダーが受け取った入力のパディングと将来のトークンをマスクするのに使用\n","    look_ahead_mask = create_look_ahead_mask(tf.shape(tar)[1])\n","    dec_target_padding_mask = create_padding_mask(tar)\n","    combined_mask = tf.maximum(dec_target_padding_mask, look_ahead_mask)\n","    return enc_padding_mask, combined_mask, dec_padding_mask\n","  \n","  return create_masks(enc_inputs, dec_inputs)"],"id":"-kevYDFELHBB","execution_count":57,"outputs":[]},{"cell_type":"code","metadata":{"id":"c0hLb-kTh95v","executionInfo":{"status":"ok","timestamp":1627545419514,"user_tz":-540,"elapsed":2,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["class TransformerEncoder(layers.Layer):\n","    def __init__(self, embed_dim, dense_dim, num_heads, **kwargs):\n","        super(TransformerEncoder, self).__init__(**kwargs)\n","        self.embed_dim = embed_dim\n","        self.dense_dim = dense_dim\n","        self.num_heads = num_heads\n","        self.attention = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.dense_proj = keras.Sequential(\n","            [layers.Dense(dense_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","        )\n","        self.layernorm_1 = layers.LayerNormalization()\n","        self.layernorm_2 = layers.LayerNormalization()\n","        # self.supports_masking = True\n","\n","    def call(self, inputs, padding_mask):\n","        attention_output = self.attention(\n","            query=inputs, value=inputs, key=inputs, attention_mask=padding_mask\n","        )\n","        proj_input = self.layernorm_1(inputs + attention_output)\n","        proj_output = self.dense_proj(proj_input)\n","        return self.layernorm_2(proj_input + proj_output)\n","\n","\n","class PositionalEmbedding(layers.Layer):\n","    def __init__(self, sequence_length, vocab_size, embed_dim, **kwargs):\n","        super(PositionalEmbedding, self).__init__(**kwargs)\n","        self.token_embeddings = layers.Embedding(\n","            input_dim=vocab_size, output_dim=embed_dim\n","        )\n","        self.position_embeddings = layers.Embedding(\n","            input_dim=sequence_length, output_dim=embed_dim\n","        )\n","        self.sequence_length = sequence_length\n","        self.vocab_size = vocab_size\n","        self.embed_dim = embed_dim\n","\n","    def call(self, inputs):\n","        length = tf.shape(inputs)[-1]\n","        positions = tf.range(start=0, limit=length, delta=1)\n","        embedded_tokens = self.token_embeddings(inputs)\n","        embedded_positions = self.position_embeddings(positions)\n","        return embedded_tokens + embedded_positions\n","\n","\n","class TransformerDecoder(layers.Layer):\n","    def __init__(self, embed_dim, latent_dim, num_heads, **kwargs):\n","        super(TransformerDecoder, self).__init__(**kwargs)\n","        self.embed_dim = embed_dim\n","        self.latent_dim = latent_dim\n","        self.num_heads = num_heads\n","        self.attention_1 = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.attention_2 = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.dense_proj = keras.Sequential(\n","            [layers.Dense(latent_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","        )\n","        self.layernorm_1 = layers.LayerNormalization()\n","        self.layernorm_2 = layers.LayerNormalization()\n","        self.layernorm_3 = layers.LayerNormalization()\n","        self.supports_masking = True\n","\n","    def call(self, inputs, encoder_outputs, causal_mask, padding_mask):\n","\n","        attention_output_1 = self.attention_1(\n","            query=inputs, value=inputs, key=inputs, attention_mask=causal_mask\n","        )\n","        out_1 = self.layernorm_1(inputs + attention_output_1)\n","\n","        attention_output_2 = self.attention_2(\n","            query=out_1,\n","            value=encoder_outputs,\n","            key=encoder_outputs,\n","            attention_mask=padding_mask,\n","        )\n","        out_2 = self.layernorm_2(out_1 + attention_output_2)\n","\n","        proj_output = self.dense_proj(out_2)\n","        return self.layernorm_3(out_2 + proj_output)"],"id":"c0hLb-kTh95v","execution_count":58,"outputs":[]},{"cell_type":"code","metadata":{"id":"YEr26Xe8CiO4","executionInfo":{"status":"ok","timestamp":1627545502328,"user_tz":-540,"elapsed":742,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["embed_dim = 128\n","latent_dim = 256\n","num_heads = 2\n","vocab_size = len(keras_tokenizer.word_index) + 1\n","\n","encoder_inputs = keras.Input(shape=(ENC_SEQ_LEN,), dtype=\"int64\", name=\"encoder_inputs\")\n","decoder_inputs = keras.Input(shape=(DEC_SEQ_LEN,), dtype=\"int64\", name=\"decoder_inputs\")\n","encoded_seq_inputs = keras.Input(shape=(ENC_SEQ_LEN, embed_dim), name=\"decoder_state_inputs\")\n","enc_padding_mask, combined_mask, dec_padding_mask = layers.Lambda(create_masking)([encoder_inputs, decoder_inputs])\n","\n","# encoder\n","x = PositionalEmbedding(ENC_SEQ_LEN, vocab_size, embed_dim)(encoder_inputs)\n","encoder_outputs = TransformerEncoder(embed_dim, latent_dim, num_heads)(x, enc_padding_mask)\n","encoder = keras.Model([encoder_inputs, decoder_inputs], encoder_outputs)\n","\n","# decoder\n","x = PositionalEmbedding(DEC_SEQ_LEN, vocab_size, embed_dim)(decoder_inputs)\n","x = TransformerDecoder(embed_dim, latent_dim, num_heads)(x, encoded_seq_inputs, combined_mask, dec_padding_mask)\n","x = layers.Dropout(0.5)(x)\n","decoder_outputs = layers.Dense(vocab_size, activation=\"softmax\")(x)\n","decoder = keras.Model([encoder_inputs, decoder_inputs, encoded_seq_inputs], decoder_outputs)\n","\n","decoder_outputs = decoder([encoder_inputs, decoder_inputs, encoder_outputs])\n","transformer = keras.Model(\n","    [encoder_inputs, decoder_inputs], decoder_outputs, name=\"transformer\"\n",")"],"id":"YEr26Xe8CiO4","execution_count":62,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ASwSAweEE1ex","executionInfo":{"status":"ok","timestamp":1627544979248,"user_tz":-540,"elapsed":198,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"60e72e86-f2ba-4f4c-d28b-cde1886aed26"},"source":["encoder.summary()"],"id":"ASwSAweEE1ex","execution_count":31,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","encoder_inputs (InputLayer)     [(None, 600)]        0                                            \n","__________________________________________________________________________________________________\n","decoder_inputs (InputLayer)     [(None, 40)]         0                                            \n","__________________________________________________________________________________________________\n","positional_embedding (Positiona (None, 600, 128)     3690496     encoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","lambda (Lambda)                 ((None, 1, 1, 600),  0           encoder_inputs[0][0]             \n","                                                                 decoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","transformer_encoder (Transforme (None, 600, 128)     198400      positional_embedding[0][0]       \n","                                                                 lambda[0][0]                     \n","==================================================================================================\n","Total params: 3,888,896\n","Trainable params: 3,888,896\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZmS-30XE3hZ","executionInfo":{"status":"ok","timestamp":1627544980855,"user_tz":-540,"elapsed":183,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"6eafeb4a-4dfc-487d-f176-4f97ae628da1"},"source":["decoder.summary()"],"id":"yZmS-30XE3hZ","execution_count":32,"outputs":[{"output_type":"stream","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","decoder_inputs (InputLayer)     [(None, 40)]         0                                            \n","__________________________________________________________________________________________________\n","encoder_inputs (InputLayer)     [(None, 600)]        0                                            \n","__________________________________________________________________________________________________\n","positional_embedding_1 (Positio (None, 40, 128)      3618816     decoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","decoder_state_inputs (InputLaye [(None, None, 128)]  0                                            \n","__________________________________________________________________________________________________\n","lambda (Lambda)                 ((None, 1, 1, 600),  0           encoder_inputs[0][0]             \n","                                                                 decoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","transformer_decoder (Transforme (None, 40, 128)      330624      positional_embedding_1[0][0]     \n","                                                                 decoder_state_inputs[0][0]       \n","                                                                 lambda[0][1]                     \n","                                                                 lambda[0][2]                     \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, 40, 128)      0           transformer_decoder[0][0]        \n","__________________________________________________________________________________________________\n","dense_4 (Dense)                 (None, 40, 28232)    3641928     dropout[0][0]                    \n","==================================================================================================\n","Total params: 7,591,368\n","Trainable params: 7,591,368\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"375cecac-3a11-448d-86ad-238dce349a07","executionInfo":{"status":"ok","timestamp":1627544982315,"user_tz":-540,"elapsed":295,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"d0a8b024-6112-4396-a538-62739c4eda96"},"source":["transformer.summary()"],"id":"375cecac-3a11-448d-86ad-238dce349a07","execution_count":33,"outputs":[{"output_type":"stream","text":["Model: \"transformer\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","encoder_inputs (InputLayer)     [(None, 600)]        0                                            \n","__________________________________________________________________________________________________\n","decoder_inputs (InputLayer)     [(None, 40)]         0                                            \n","__________________________________________________________________________________________________\n","positional_embedding (Positiona (None, 600, 128)     3690496     encoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","lambda (Lambda)                 ((None, 1, 1, 600),  0           encoder_inputs[0][0]             \n","                                                                 decoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","transformer_encoder (Transforme (None, 600, 128)     198400      positional_embedding[0][0]       \n","                                                                 lambda[0][0]                     \n","__________________________________________________________________________________________________\n","model_1 (Functional)            (None, 40, 28232)    7591368     encoder_inputs[0][0]             \n","                                                                 decoder_inputs[0][0]             \n","                                                                 transformer_encoder[0][0]        \n","==================================================================================================\n","Total params: 11,480,264\n","Trainable params: 11,480,264\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"67499d34-fc63-4f2c-b0c5-52d0b1cb8305","executionInfo":{"status":"ok","timestamp":1627545506733,"user_tz":-540,"elapsed":190,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.compile(\n","    \"rmsprop\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"]\n",")"],"id":"67499d34-fc63-4f2c-b0c5-52d0b1cb8305","execution_count":63,"outputs":[]},{"cell_type":"code","metadata":{"id":"rT-wNh3MLJYW","executionInfo":{"status":"ok","timestamp":1627546515912,"user_tz":-540,"elapsed":8,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["# transformer.load_weights(\"./transformer_weight.h5\")"],"id":"rT-wNh3MLJYW","execution_count":82,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZmWR9Z7LU-cs"},"source":["decoder_outputs_Y[0]"],"id":"ZmWR9Z7LU-cs","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1c27758a-8d00-4c0a-83fd-9fbe748177b4","executionInfo":{"status":"ok","timestamp":1627546515911,"user_tz":-540,"elapsed":82218,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"e8ed505b-8678-4a64-ca0a-50226dd186e3"},"source":["transformer.fit(x=(encoder_inputs_X, decoder_inputs_Y), y=decoder_outputs_Y, batch_size=32, epochs=1)"],"id":"1c27758a-8d00-4c0a-83fd-9fbe748177b4","execution_count":81,"outputs":[{"output_type":"stream","text":["343/343 [==============================] - 52s 151ms/step - loss: 1.2829 - accuracy: 0.8652\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f8ff1610110>"]},"metadata":{"tags":[]},"execution_count":81}]},{"cell_type":"code","metadata":{"id":"8e0ac093-6b26-46cb-b619-9ac0b81ecef9","executionInfo":{"status":"aborted","timestamp":1627532967121,"user_tz":-540,"elapsed":16,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.save_weights(\"./transformer_weight_berttkn.h5\")"],"id":"8e0ac093-6b26-46cb-b619-9ac0b81ecef9","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h8zb8TgF9ffJ","executionInfo":{"status":"aborted","timestamp":1627532967121,"user_tz":-540,"elapsed":16,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.load_weights(\"./transformer_weight_berttkn.h5\")"],"id":"h8zb8TgF9ffJ","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PtSuV5pwMeee","executionInfo":{"status":"ok","timestamp":1627546694095,"user_tz":-540,"elapsed":186,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["keras_tokenizer.index_word[0] = ''\n","keras_tokenizer.word_index[\"\"] = 0\n","def decode_title(input_sentence):\n","  decoder_sentence = \"[CLS] 女優 広瀬 すず が 18 日 、 自身 の インスタ ##グラム を 更新 し 、\"\n","  input_sentence = \" \".join(tokenizer.tokenize(input_sentence))\n","  encoder_sentence_ = keras_tokenizer.texts_to_sequences([input_sentence])\n","  encoder_sentence_ = pp.sequence.pad_sequences(encoder_sentence_, maxlen=600, padding=\"post\", truncating=\"post\")\n","  for i in range(30):\n","    decoder_sentence_ = keras_tokenizer.texts_to_sequences([decoder_sentence])\n","    decoder_sentence_ = pp.sequence.pad_sequences(decoder_sentence_, maxlen=40, padding=\"post\", truncating=\"post\")\n","    pred = transformer((encoder_sentence_, decoder_sentence_))\n","    sampled_tkn_idx = np.argmax(pred[0,i,:])\n","    sampled_tkn = keras_tokenizer.index_word[sampled_tkn_idx]\n","    print(sampled_tkn_idx)\n","    decoder_sentence =  decoder_sentence + \" \" + sampled_tkn\n","    # if sampled_tkn == \"[SEP]\":\n","    #   break\n","  return \"\".join(re.sub(\"#\", \"\", decoder_sentence).split(\" \")[1:-1])"],"id":"PtSuV5pwMeee","execution_count":88,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"MJUE74-7Vymk","executionInfo":{"status":"ok","timestamp":1627546679141,"user_tz":-540,"elapsed":190,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"d2a56b04-ef9c-4964-ace3-6a12fdfd3383"},"source":["\" \".join(tokenizer.tokenize(\"女優広瀬すずが18日、自身のインスタグラムを更新し、\"))"],"id":"MJUE74-7Vymk","execution_count":87,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'女優 広瀬 すず が 18 日 、 自身 の インスタ ##グラム を 更新 し 、'"]},"metadata":{"tags":[]},"execution_count":87}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":52},"id":"szLhpYvpVpml","executionInfo":{"status":"ok","timestamp":1627546631854,"user_tz":-540,"elapsed":188,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"7c676ff1-42e0-4026-ebf7-fade651a32e7"},"source":["datasets[idx][0]"],"id":"szLhpYvpVpml","execution_count":85,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'女優広瀬すずが18日、自身のインスタグラムを更新し、「一年。ただ考えてしまうことしか出来なかったです。会いたいな。」と記した。この日は、30歳で亡くなった俳優三浦春馬さんの一周忌。2人は、18年の映画「SUNNY強い気持ち・強い愛」などで共演していた。'"]},"metadata":{"tags":[]},"execution_count":85}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UPPBudA4QTiv","executionInfo":{"status":"ok","timestamp":1627546702017,"user_tz":-540,"elapsed":1047,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}},"outputId":"f319c592-5884-4950-bd11-869782e82e06"},"source":["idx = 100\n","print(datasets[idx][0])\n","print(\"↓\")\n","print(decode_title(datasets[idx][0]))"],"id":"UPPBudA4QTiv","execution_count":89,"outputs":[{"output_type":"stream","text":["女優広瀬すずが18日、自身のインスタグラムを更新し、「一年。ただ考えてしまうことしか出来なかったです。会いたいな。」と記した。この日は、30歳で亡くなった俳優三浦春馬さんの一周忌。2人は、18年の映画「SUNNY強い気持ち・強い愛」などで共演していた。\n","↓\n","1807\n","5\n","2178\n","6\n","539\n","34\n","2\n","386\n","1\n","1954\n","2753\n","5\n","1345\n","12\n","2\n","1807\n","5\n","2178\n","6\n","539\n","34\n","2\n","386\n","1\n","1954\n","2753\n","5\n","1345\n","12\n","2\n","女優広瀬すずが18日、自身のインスタグラムを更新し、女優を必ずが18日、自身のインスタ出産を更新し、女優を必ずが18日、自身のインスタ出産を更新し\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"jytx7fKSOnxH","executionInfo":{"status":"aborted","timestamp":1627532967520,"user_tz":-540,"elapsed":415,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["news_sample = '''比嘉愛未（35）主演の連ドラ「推しの王子様」（フジテレビ系木曜夜10時）。乙女ゲームを手がけるベンチャー企業の女社長・泉美が、自身の理想通りにつくった推しキャラのケント様にそっくりな航（渡辺圭祐＝27）に出会うことで始まる物語だが、当初主演予定だった深田恭子（38）が適応障害で休業することを公表し、降板。急きょ代役で泉美を演じることになったのが、比嘉だ。\n","\n","比嘉愛未「2行のセリフ」が言えなかった駆け出し時代\n","\n","「最近の代役といえば、NHK大河『麒麟がくる』でしょう。沢尻エリカの代役で、川口春奈が帰蝶を演じましたが、ふたを開けてみると、〈川口でよかった〉の声がほとんどだった。『推しの王子様』の比嘉も、初回を見る限り、そういう評価になりそうな予感がします。仕事ができる女社長役って、深田よりむしろ比嘉の方がハマる気がしますもんね」（ドラマ制作会社スタッフ）'''"],"id":"jytx7fKSOnxH","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iBtFkb6vOtcp","executionInfo":{"status":"aborted","timestamp":1627532967520,"user_tz":-540,"elapsed":414,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["news_sample = re.sub(r\"\\s\", \"\", news_sample)\n","news_sample = re.sub(\"\\u3000\", \"\", news_sample)\n","news_sample"],"id":"iBtFkb6vOtcp","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H8_FLJcvO-ir","executionInfo":{"status":"aborted","timestamp":1627532967521,"user_tz":-540,"elapsed":415,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["decode_title(news_sample)"],"id":"H8_FLJcvO-ir","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SGrFWKmMQX33","executionInfo":{"status":"aborted","timestamp":1627532967521,"user_tz":-540,"elapsed":415,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["re.sub().split(\" \")[1:-1]"],"id":"SGrFWKmMQX33","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KPVbm1NxN_uK","executionInfo":{"status":"aborted","timestamp":1627532967522,"user_tz":-540,"elapsed":416,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":["re.sub?"],"id":"KPVbm1NxN_uK","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hMx9de2vOAzZ","executionInfo":{"status":"aborted","timestamp":1627532967522,"user_tz":-540,"elapsed":416,"user":{"displayName":"kiyoshige goto","photoUrl":"","userId":"01082649767351199152"}}},"source":[""],"id":"hMx9de2vOAzZ","execution_count":null,"outputs":[]}]}