{"nbformat":4,"nbformat_minor":5,"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"colab":{"name":"Keras-Seq2Seq.ipynb-V3","provenance":[{"file_id":"17dS2uuvu8xYuVB50nQ_dKMxZ1339v3gS","timestamp":1627522945553},{"file_id":"10Z2NcwruxPj3Zq-h6ZCIBh5jtG9_dKNw","timestamp":1627428694725}],"collapsed_sections":[],"machine_shape":"hm"},"widgets":{"application/vnd.jupyter.widget-state+json":{"650d2aa52fa7482e9f01b7c2b4d10bdb":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_097659839d0b4f78a6248426be3ff290","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_8822354bebf6464aa00bd03ef0c59978","IPY_MODEL_e19cecf616304dbaad66b7c1cc7d4310"]}},"097659839d0b4f78a6248426be3ff290":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"8822354bebf6464aa00bd03ef0c59978":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_ffdde3e11c6147f2a9ee3ed638e09294","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":257706,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":257706,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_f87b20abe1c94e50a5af9f9b7f03d945"}},"e19cecf616304dbaad66b7c1cc7d4310":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b689cd9e10474f8db98ee63e6b712537","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 258k/258k [00:01&lt;00:00, 147kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d97bf39ba4fe4c1da356c6b0bf7cf81d"}},"ffdde3e11c6147f2a9ee3ed638e09294":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"f87b20abe1c94e50a5af9f9b7f03d945":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b689cd9e10474f8db98ee63e6b712537":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d97bf39ba4fe4c1da356c6b0bf7cf81d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"af6c304aa1f94254a93624a90d7972c8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_d765255056ff489b89f18b7b9f7c3476","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_6249761475084dee8276349579a7c0fc","IPY_MODEL_ab61a0af5be14ace8be30284a94be70f"]}},"d765255056ff489b89f18b7b9f7c3476":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6249761475084dee8276349579a7c0fc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_76de1b9ebb4540709e63c6bc47893ae7","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":110,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":110,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_ed972d2b33b54c898fa4ef57d5c4312f"}},"ab61a0af5be14ace8be30284a94be70f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_d5c53cf58b394be6a11c23c962ea7265","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 110/110 [00:00&lt;00:00, 218B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_772d19c92d6042239743db4d15207e73"}},"76de1b9ebb4540709e63c6bc47893ae7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"ed972d2b33b54c898fa4ef57d5c4312f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"d5c53cf58b394be6a11c23c962ea7265":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"772d19c92d6042239743db4d15207e73":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KK4aJbMtJmIz","executionInfo":{"status":"ok","timestamp":1627990628758,"user_tz":-540,"elapsed":13049,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"cba9f8e0-1259-4d04-a2b9-4dcf0283edc2"},"source":["!pip install transformers==4.5.0 fugashi==1.1.0 ipadic==1.0.0"],"id":"KK4aJbMtJmIz","execution_count":1,"outputs":[{"output_type":"stream","text":["Collecting transformers==4.5.0\n","  Downloading transformers-4.5.0-py3-none-any.whl (2.1 MB)\n","\u001b[K     |████████████████████████████████| 2.1 MB 8.1 MB/s \n","\u001b[?25hCollecting fugashi==1.1.0\n","  Downloading fugashi-1.1.0-cp37-cp37m-manylinux1_x86_64.whl (486 kB)\n","\u001b[K     |████████████████████████████████| 486 kB 62.6 MB/s \n","\u001b[?25hCollecting ipadic==1.0.0\n","  Downloading ipadic-1.0.0.tar.gz (13.4 MB)\n","\u001b[K     |████████████████████████████████| 13.4 MB 203 kB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (3.0.12)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (2019.12.20)\n","Collecting sacremoses\n","  Downloading sacremoses-0.0.45-py3-none-any.whl (895 kB)\n","\u001b[K     |████████████████████████████████| 895 kB 55.3 MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (4.6.1)\n","Collecting tokenizers<0.11,>=0.10.1\n","  Downloading tokenizers-0.10.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (3.3 MB)\n","\u001b[K     |████████████████████████████████| 3.3 MB 59.6 MB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (4.41.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (2.23.0)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (1.19.5)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers==4.5.0) (21.0)\n","Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers==4.5.0) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers==4.5.0) (3.5.0)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers==4.5.0) (2.4.7)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.5.0) (2021.5.30)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (1.15.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (1.0.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.5.0) (7.1.2)\n","Building wheels for collected packages: ipadic\n","  Building wheel for ipadic (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ipadic: filename=ipadic-1.0.0-py3-none-any.whl size=13556723 sha256=b839efa339edc8b3d93815ba7b4d520ddad5b329b96264e7e2b165d4d9cb3b24\n","  Stored in directory: /root/.cache/pip/wheels/33/8b/99/cf0d27191876637cd3639a560f93aa982d7855ce826c94348b\n","Successfully built ipadic\n","Installing collected packages: tokenizers, sacremoses, transformers, ipadic, fugashi\n","Successfully installed fugashi-1.1.0 ipadic-1.0.0 sacremoses-0.0.45 tokenizers-0.10.3 transformers-4.5.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ORL3IdiSJ0tm","executionInfo":{"status":"ok","timestamp":1627990631217,"user_tz":-540,"elapsed":2461,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["from transformers import BertJapaneseTokenizer, BertModel"],"id":"ORL3IdiSJ0tm","execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"_h5NWfrcJ8QB","colab":{"base_uri":"https://localhost:8080/","height":115,"referenced_widgets":["650d2aa52fa7482e9f01b7c2b4d10bdb","097659839d0b4f78a6248426be3ff290","8822354bebf6464aa00bd03ef0c59978","e19cecf616304dbaad66b7c1cc7d4310","ffdde3e11c6147f2a9ee3ed638e09294","f87b20abe1c94e50a5af9f9b7f03d945","b689cd9e10474f8db98ee63e6b712537","d97bf39ba4fe4c1da356c6b0bf7cf81d","af6c304aa1f94254a93624a90d7972c8","d765255056ff489b89f18b7b9f7c3476","6249761475084dee8276349579a7c0fc","ab61a0af5be14ace8be30284a94be70f","76de1b9ebb4540709e63c6bc47893ae7","ed972d2b33b54c898fa4ef57d5c4312f","d5c53cf58b394be6a11c23c962ea7265","772d19c92d6042239743db4d15207e73"]},"executionInfo":{"status":"ok","timestamp":1627990633369,"user_tz":-540,"elapsed":2153,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"e79e0296-88f3-45fb-dbf4-a91fc3dc9b92"},"source":["tokenizer = BertJapaneseTokenizer.from_pretrained(\"cl-tohoku/bert-base-japanese-whole-word-masking\")"],"id":"_h5NWfrcJ8QB","execution_count":3,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"650d2aa52fa7482e9f01b7c2b4d10bdb","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=257706.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"af6c304aa1f94254a93624a90d7972c8","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=110.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"d10aaa01-d57a-4679-8fcb-8481da434324","executionInfo":{"status":"ok","timestamp":1627990635108,"user_tz":-540,"elapsed":1741,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["import pickle\n","import numpy as np\n","import pandas as pd\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","# from tensorflow.keras.layers.experimental.preprocessing import TextVectorization\n","from tensorflow.keras import preprocessing as pp"],"id":"d10aaa01-d57a-4679-8fcb-8481da434324","execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"BvUGfay8N7Ld","executionInfo":{"status":"ok","timestamp":1627990635108,"user_tz":-540,"elapsed":2,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["import re"],"id":"BvUGfay8N7Ld","execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bZrw0fTg2Yse","executionInfo":{"status":"ok","timestamp":1627990650391,"user_tz":-540,"elapsed":15285,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"403362f9-bb7f-4071-987b-f166212ccea2"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"id":"bZrw0fTg2Yse","execution_count":6,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GTAHsIkg8NW8","executionInfo":{"status":"ok","timestamp":1627990650391,"user_tz":-540,"elapsed":16,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"5474d574-a629-4361-98d9-edb1c01b7365"},"source":["ls"],"id":"GTAHsIkg8NW8","execution_count":7,"outputs":[{"output_type":"stream","text":["\u001b[0m\u001b[01;34mdrive\u001b[0m/  \u001b[01;34msample_data\u001b[0m/\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B9hxD4NT2fy9","executionInfo":{"status":"ok","timestamp":1627990650392,"user_tz":-540,"elapsed":9,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"124f6782-0770-4989-86bf-623c7515a0e8"},"source":["cd drive/MyDrive/"],"id":"B9hxD4NT2fy9","execution_count":8,"outputs":[{"output_type":"stream","text":["/content/drive/MyDrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GLFf6DUY22iQ","executionInfo":{"status":"ok","timestamp":1627990650392,"user_tz":-540,"elapsed":7,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"18aec83b-db38-47fc-8a22-a2b404c2efaf"},"source":["ls | grep dataset"],"id":"GLFf6DUY22iQ","execution_count":9,"outputs":[{"output_type":"stream","text":["datasets.bin\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"_PyUQh__2W7D","executionInfo":{"status":"ok","timestamp":1627990651379,"user_tz":-540,"elapsed":991,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["with open(\"./datasets.bin\", \"rb\") as f:\n","  datasets = pickle.load(f)"],"id":"_PyUQh__2W7D","execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0lOpESUYlHwP","executionInfo":{"status":"ok","timestamp":1627990651379,"user_tz":-540,"elapsed":5,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"62ee951d-9122-4b53-f2e3-1589db33740f"},"source":["len(datasets)"],"id":"0lOpESUYlHwP","execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11989"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tesuiiKb28dT","executionInfo":{"status":"ok","timestamp":1627990651656,"user_tz":-540,"elapsed":5,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"8d8af831-7e78-4c6c-88b6-393eaf185286"},"source":["print(datasets[0][0])\n","print()\n","print(datasets[0][1])"],"id":"tesuiiKb28dT","execution_count":12,"outputs":[{"output_type":"stream","text":["お笑いトリオ・安田大サーカスのクロちゃん(44)の所属事務所・松竹芸能は19日、クロちゃんが新型コロナウイルスに感染したことを報告した。【写真】1回目のワクチン接種後には…体温計の写真とともに経過を報告した団長安田サイトでは「7月18日夜の仕事前、体調に違和感と悪寒を感じたため、体温計測したところ37.5度あり、発熱外来を受診、新型コロナウイルスPCR検査を受けた結果、同日深夜に陽性と診断されました」と説明。「今後は保健所の指示に従い適切に対処してまいります」とした。今月15日には、団長安田(47)の新型コロナウイルス感染を公表。「先日感染をご報告させていただきました、団長安田とは直近での接触はなく、保健所からも濃厚接触者には認定されていない為、別ルートでの感染と考えられます」と伝え「この度は仕事関係者・共演者の皆様、いつも応援して下さっている皆様に多大なるご迷惑とご心配をお掛けしていることを、心よりお詫び申し上げます」と記した。最後は「弊社は引き続き、行政機関、医療機関の指導のもと、体調管理の徹底、所属タレントおよび社員、関係各位への感染防止を優先し、新型コロナウイルスの感染予防、拡大防止対策を徹底してまいります」とコメントしている。\n","\n","安田大サーカス・クロちゃん、新型コロナ感染団長安田とは「別ルートでの感染と考えられます」\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"ve19Ro6CmV9T","executionInfo":{"status":"ok","timestamp":1627990651656,"user_tz":-540,"elapsed":5,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"2ece9202-f7d5-4289-e310-ac0a5513b71d"},"source":["\" \".join(tokenizer.tokenize(datasets[0][1]))"],"id":"ve19Ro6CmV9T","execution_count":13,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'安田 大 サーカス ・ クロ ちゃん 、 新型 コロナ 感染 団長 安田 と は 「 別 ルート で の 感染 と 考え られ ます 」'"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l05rlDO3lkJm","executionInfo":{"status":"ok","timestamp":1627990651656,"user_tz":-540,"elapsed":4,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"60e9c3e5-e4f9-49cd-d9b8-3cb5b4b64361"},"source":["input_ids = tokenizer.encode(datasets[0][1])\n","tokenizer.convert_ids_to_tokens(input_ids)"],"id":"l05rlDO3lkJm","execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['[CLS]',\n"," '安田',\n"," '大',\n"," 'サーカス',\n"," '・',\n"," 'クロ',\n"," 'ちゃん',\n"," '、',\n"," '新型',\n"," 'コロナ',\n"," '感染',\n"," '団長',\n"," '安田',\n"," 'と',\n"," 'は',\n"," '「',\n"," '別',\n"," 'ルート',\n"," 'で',\n"," 'の',\n"," '感染',\n"," 'と',\n"," '考え',\n"," 'られ',\n"," 'ます',\n"," '」',\n"," '[SEP]']"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H2Ry_izYlq-r","executionInfo":{"status":"ok","timestamp":1627990685686,"user_tz":-540,"elapsed":34032,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"4be9112c-3601-4923-fac7-c6a0632796ae"},"source":["context = [\" \".join(tokenizer.tokenize(d[0])) for d in datasets]\n","title = [\"[CLS] \" + \" \".join(tokenizer.tokenize(d[1])) + \" [SEP]\" for d in datasets]\n","print(context[0])\n","print(title[0])"],"id":"H2Ry_izYlq-r","execution_count":15,"outputs":[{"output_type":"stream","text":["お笑い トリオ ・ 安田 大 サーカス の クロ ちゃん ( 44 ) の 所属 事務所 ・ 松竹 芸能 は 19 日 、 クロ ちゃん が 新型 コロナ ウイルス に 感染 し た こと を 報告 し た 。 【 写真 】 1 回 目 の ワクチン 接種 後 に は ... 体温 ##計 の 写真 とともに 経過 を 報告 し た 団長 安田 サイト で は 「 7 月 18 日 夜 の 仕事 前 、 体調 に 違和感 と 悪 ##寒 を 感じ た ため 、 体温 計測 し た ところ 37 . 5 度 あり 、 発熱 外来 を 受 ##診 、 新型 コロナ ウイルス PC ##R 検査 を 受け た 結果 、 同日 深夜 に 陽性 と 診断 さ れ まし た 」 と 説明 。 「 今後 は 保健 ##所 の 指示 に従い 適切 に 対処 し て まい ##り ます 」 と し た 。 今 ##月 15 日 に は 、 団長 安田 ( 47 ) の 新型 コロナ ウイルス 感染 を 公表 。 「 先 ##日 感染 を ご 報告 さ せ て いただ ##き まし た 、 団長 安田 と は 直近 で の 接触 は なく 、 保健 ##所 から も 濃厚 接触 者 に は 認定 さ れ て い ない 為 、 別 ルート で の 感染 と 考え られ ます 」 と 伝え 「 この 度 は 仕事 関係 者 ・ 共演 者 の 皆 ##様 、 いつも 応援 し て 下さ ##っ て いる 皆 ##様 に 多大 なる ご 迷惑 と ご 心配 を お 掛け し て いる こと を 、 心 より お ##詫び 申し ##上げ ます 」 と 記し た 。 最後 は 「 弊 ##社 は 引き続き 、 行政 機関 、 医療 機関 の 指導 の もと 、 体調 管理 の 徹底 、 所属 タレント および 社員 、 関係 各 ##位 へ の 感染 防止 を 優先 し 、 新型 コロナ ウイルス の 感染 予防 、 拡大 防止 対策 を 徹底 し て まい ##り ます 」 と コメント し て いる 。\n","[CLS] 安田 大 サーカス ・ クロ ちゃん 、 新型 コロナ 感染 団長 安田 と は 「 別 ルート で の 感染 と 考え られ ます 」 [SEP]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f1dc058f-aa26-4f99-b514-69638d30f236","executionInfo":{"status":"ok","timestamp":1627990685686,"user_tz":-540,"elapsed":21,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"bb81f462-1717-4670-e2c7-0a4ffa4334f6"},"source":["len(context), len(title)"],"id":"f1dc058f-aa26-4f99-b514-69638d30f236","execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(11989, 11989)"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"87f55129-0acc-48d8-8e4c-fc64982def53","executionInfo":{"status":"ok","timestamp":1627990692173,"user_tz":-540,"elapsed":6505,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["keras_tokenizer = pp.text.Tokenizer(filters=\"\", lower=False)\n","keras_tokenizer.fit_on_texts(context + title)\n","# keras_tokenizer.word_index = dict(tokenizer.vocab)\n","# keras_tokenizer.index_word = {idx: word for word,idx in keras_tokenizer.word_index.items()}"],"id":"87f55129-0acc-48d8-8e4c-fc64982def53","execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"31631ddc-b84e-4be3-b56a-b6fbe4309565","executionInfo":{"status":"ok","timestamp":1627990692173,"user_tz":-540,"elapsed":25,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"a30af55b-4d3b-4d2f-b9b2-1519999f1cd5"},"source":["len(keras_tokenizer.word_index)"],"id":"31631ddc-b84e-4be3-b56a-b6fbe4309565","execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28362"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"3eC4O-Uu9hdD","executionInfo":{"status":"ok","timestamp":1627990692529,"user_tz":-540,"elapsed":375,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["with open(\"./keras_tokenizer.bin\", 'wb') as f:\n","    pickle.dump(keras_tokenizer , f)"],"id":"3eC4O-Uu9hdD","execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"ee7ce94c-2f0e-49fe-83c8-49c08de8384c","executionInfo":{"status":"ok","timestamp":1627990697865,"user_tz":-540,"elapsed":5338,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["X = keras_tokenizer.texts_to_sequences(context)\n","y = keras_tokenizer.texts_to_sequences(title)"],"id":"ee7ce94c-2f0e-49fe-83c8-49c08de8384c","execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"fbqOIVcpe3GX","executionInfo":{"status":"ok","timestamp":1627990698239,"user_tz":-540,"elapsed":392,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["cotext_lens = np.array([len(s.split(\" \")) for s in context])"],"id":"fbqOIVcpe3GX","execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xylc8bvkfPf0","executionInfo":{"status":"ok","timestamp":1627990698239,"user_tz":-540,"elapsed":3,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"878987b4-8033-4b77-a79b-3425a57e88a5"},"source":["(cotext_lens < 400).sum()"],"id":"xylc8bvkfPf0","execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3472"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ae385e2-9876-454e-b284-2ac7ee367de9","executionInfo":{"status":"ok","timestamp":1627990698239,"user_tz":-540,"elapsed":2,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"dfce9375-af02-43df-bdb9-6d2ccf188833"},"source":["[keras_tokenizer.index_word[idx] for idx in X[0][0:100]], \"->\" , [keras_tokenizer.index_word[idx] for idx in y[0][0:10]]"],"id":"5ae385e2-9876-454e-b284-2ac7ee367de9","execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(['お笑い',\n","  'トリオ',\n","  '・',\n","  '安田',\n","  '大',\n","  'サーカス',\n","  'の',\n","  'クロ',\n","  'ちゃん',\n","  '(',\n","  '44',\n","  ')',\n","  'の',\n","  '所属',\n","  '事務所',\n","  '・',\n","  '松竹',\n","  '芸能',\n","  'は',\n","  '19',\n","  '日',\n","  '、',\n","  'クロ',\n","  'ちゃん',\n","  'が',\n","  '新型',\n","  'コロナ',\n","  'ウイルス',\n","  'に',\n","  '感染',\n","  'し',\n","  'た',\n","  'こと',\n","  'を',\n","  '報告',\n","  'し',\n","  'た',\n","  '。',\n","  '【',\n","  '写真',\n","  '】',\n","  '1',\n","  '回',\n","  '目',\n","  'の',\n","  'ワクチン',\n","  '接種',\n","  '後',\n","  'に',\n","  'は',\n","  '...',\n","  '体温',\n","  '##計',\n","  'の',\n","  '写真',\n","  'とともに',\n","  '経過',\n","  'を',\n","  '報告',\n","  'し',\n","  'た',\n","  '団長',\n","  '安田',\n","  'サイト',\n","  'で',\n","  'は',\n","  '「',\n","  '7',\n","  '月',\n","  '18',\n","  '日',\n","  '夜',\n","  'の',\n","  '仕事',\n","  '前',\n","  '、',\n","  '体調',\n","  'に',\n","  '違和感',\n","  'と',\n","  '悪',\n","  '##寒',\n","  'を',\n","  '感じ',\n","  'た',\n","  'ため',\n","  '、',\n","  '体温',\n","  '計測',\n","  'し',\n","  'た',\n","  'ところ',\n","  '37',\n","  '.',\n","  '5',\n","  '度',\n","  'あり',\n","  '、',\n","  '発熱',\n","  '外来'],\n"," '->',\n"," ['[CLS]', '安田', '大', 'サーカス', '・', 'クロ', 'ちゃん', '、', '新型', 'コロナ'])"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"f764185b-e515-4261-bd26-6277dc0d9cda","executionInfo":{"status":"ok","timestamp":1627990904923,"user_tz":-540,"elapsed":687,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["SEQ_LEN = 600\n","X = pp.sequence.pad_sequences(X, maxlen=SEQ_LEN, padding=\"post\", truncating=\"post\")\n","y = pp.sequence.pad_sequences(y, maxlen=SEQ_LEN+1, padding=\"post\", truncating=\"post\")"],"id":"f764185b-e515-4261-bd26-6277dc0d9cda","execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eaa7c9be-fd84-41ad-9da1-9bade138d413","executionInfo":{"status":"ok","timestamp":1627990904924,"user_tz":-540,"elapsed":4,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"15794224-a604-49a7-b438-325a44197850"},"source":["encoder_inputs_X = X\n","decoder_inputs_Y = y[:,:-1]\n","decoder_outputs_Y = y[:,1:]\n","print(encoder_inputs_X.shape, decoder_inputs_Y.shape, decoder_outputs_Y.shape)"],"id":"eaa7c9be-fd84-41ad-9da1-9bade138d413","execution_count":26,"outputs":[{"output_type":"stream","text":["(11989, 600) (11989, 600) (11989, 600)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"67397e93-c877-440d-b86e-1623a3d76c1e","executionInfo":{"status":"ok","timestamp":1627990904924,"user_tz":-540,"elapsed":3,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"719e4806-43e7-4f7d-e318-df51b1e724d5"},"source":["encoder_inputs_X[0]"],"id":"67397e93-c877-440d-b86e-1623a3d76c1e","execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 2352, 13468,    31, 10507,   121, 20391,     1,  1657,   357,\n","          20,  3329,    25,     1,  1476,  1272,    31, 19620,  1407,\n","           7,   588,    34,     2,  1657,   357,     6,   311,   177,\n","         611,     4,   261,    12,     9,    22,     5,   866,    12,\n","           9,     3,   132,   153,   110,    36,   191,   142,     1,\n","         421,   437,   143,     4,     7,   179,  5601,  2178,     1,\n","         153,  1083,  5838,     5,   866,    12,     9, 16991, 10507,\n","         550,    11,     7,    13,   107,    49,   541,    34,   789,\n","           1,   230,   117,     2,  2899,     4,  3747,    10,  1435,\n","       11919,     5,   178,     9,    81,     2,  5601, 10246,    12,\n","           9,   197,  2456,    61,    85,   212,    52,     2,  6856,\n","       13751,     5,  5915,  7544,     2,   311,   177,   611,  2505,\n","         795,  1375,     5,   264,     9,   292,     2,  3653,  2673,\n","           4,  3072,    10,  3589,    24,    28,    38,     9,    14,\n","          10,   572,     3,    13,   638,     7,  4401,  3786,     1,\n","        3667, 14199,  4453,     4,  3915,    12,     8,  2359,   100,\n","          18,    14,    10,    12,     9,     3,   133,   961,   381,\n","          34,     4,     7,     2, 16991, 10507,    20,  2779,    25,\n","           1,   311,   177,   611,   261,     5,  2960,     3,    13,\n","         297,  1192,   261,     5,   115,   866,    24,   146,     8,\n","         431,   213,    38,     9,     2, 16991, 10507,    10,     7,\n","        8188,    11,     1,  2984,     7,    83,     2,  4401,  3786,\n","          27,    15,   926,  2984,    66,     4,     7,  4612,    24,\n","          28,     8,    23,    21,  6550,     2,   463,  7138,    11,\n","           1,   261,    10,   215,    84,    18,    14,    10,   626,\n","          13,    58,   212,     7,   230,   190,    66,    31,  3342,\n","          66,     1,   952,  1087,     2,   809,  1819,    12,     8,\n","        9354,    93,     8,    19,   952,  1087,     4, 12657,    60,\n","         115,  2690,    10,   115,  1169,     5,    42,  4011,    12,\n","           8,    19,    22,     5,     2,   268,   122,    42,  7376,\n","        1772,  1311,    18,    14,    10,  6090,     9,     3,   583,\n","           7,    13,  6857,  1760,     7,  4555,     2,  4914,  1945,\n","           2,  1477,  1945,     1,  2780,     1,  1798,     2,  2899,\n","        1084,     1,  3659,     2,  1476,  1820,  3279,  1682,     2,\n","         190,   753,  9931,   112,     1,   261,  1930,     5,  2882,\n","          12,     2,   311,   177,   611,     1,   261,  2972,     2,\n","        1045,  1930,   619,     5,  3659,    12,     8,  2359,   100,\n","          18,    14,    10,   382,    12,     8,    19,     3,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qcKsdyEGLBDD","executionInfo":{"status":"ok","timestamp":1627990905238,"user_tz":-540,"elapsed":2,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"f79094ed-0e5b-4ab0-fb5b-f89c5886624a"},"source":["decoder_inputs_Y[0]"],"id":"qcKsdyEGLBDD","execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([   69, 10507,   121, 20391,    31,  1657,   357,     2,   311,\n","         177,   261, 16991, 10507,    10,     7,    13,   463,  7138,\n","          11,     1,   261,    10,   215,    84,    18,    14,    70,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e5cff1ed-a39d-47a8-b46f-c34de79946a6","executionInfo":{"status":"ok","timestamp":1627990905551,"user_tz":-540,"elapsed":2,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"a71b6172-e74d-4669-d26c-dfe2fc15a44c"},"source":["decoder_outputs_Y[0]"],"id":"e5cff1ed-a39d-47a8-b46f-c34de79946a6","execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([10507,   121, 20391,    31,  1657,   357,     2,   311,   177,\n","         261, 16991, 10507,    10,     7,    13,   463,  7138,    11,\n","           1,   261,    10,   215,    84,    18,    14,    70,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0,     0,     0,     0,\n","           0,     0,     0,     0,     0,     0], dtype=int32)"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"id":"66b7261a-bd8e-4e53-8ebc-a7a6e23dced9","executionInfo":{"status":"ok","timestamp":1627990906099,"user_tz":-540,"elapsed":278,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["class TransformerEncoder(layers.Layer):\n","    def __init__(self, embed_dim, dense_dim, num_heads, **kwargs):\n","        super(TransformerEncoder, self).__init__(**kwargs)\n","        self.embed_dim = embed_dim\n","        self.dense_dim = dense_dim\n","        self.num_heads = num_heads\n","        self.attention = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.dense_proj = keras.Sequential(\n","            [layers.Dense(dense_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","        )\n","        self.layernorm_1 = layers.LayerNormalization()\n","        self.layernorm_2 = layers.LayerNormalization()\n","        self.supports_masking = True\n","\n","    def call(self, inputs, mask=None):\n","        if mask is not None:\n","            padding_mask = tf.cast(mask[:, tf.newaxis, tf.newaxis, :], dtype=\"int32\")\n","        attention_output = self.attention(\n","            query=inputs, value=inputs, key=inputs, attention_mask=padding_mask\n","        )\n","        proj_input = self.layernorm_1(inputs + attention_output)\n","        proj_output = self.dense_proj(proj_input)\n","        return self.layernorm_2(proj_input + proj_output)\n","\n","\n","class PositionalEmbedding(layers.Layer):\n","    def __init__(self, sequence_length, vocab_size, embed_dim, **kwargs):\n","        super(PositionalEmbedding, self).__init__(**kwargs)\n","        self.token_embeddings = layers.Embedding(\n","            input_dim=vocab_size, output_dim=embed_dim\n","        )\n","        self.position_embeddings = layers.Embedding(\n","            input_dim=sequence_length, output_dim=embed_dim\n","        )\n","        self.sequence_length = sequence_length\n","        self.vocab_size = vocab_size\n","        self.embed_dim = embed_dim\n","\n","    def call(self, inputs):\n","        length = tf.shape(inputs)[-1]\n","        positions = tf.range(start=0, limit=length, delta=1)\n","        embedded_tokens = self.token_embeddings(inputs)\n","        embedded_positions = self.position_embeddings(positions)\n","        return embedded_tokens + embedded_positions\n","\n","    def compute_mask(self, inputs, mask=None):\n","        return tf.math.not_equal(inputs, 0)\n","\n","\n","class TransformerDecoder(layers.Layer):\n","    def __init__(self, embed_dim, latent_dim, num_heads, **kwargs):\n","        super(TransformerDecoder, self).__init__(**kwargs)\n","        self.embed_dim = embed_dim\n","        self.latent_dim = latent_dim\n","        self.num_heads = num_heads\n","        self.attention_1 = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.attention_2 = layers.MultiHeadAttention(\n","            num_heads=num_heads, key_dim=embed_dim\n","        )\n","        self.dense_proj = keras.Sequential(\n","            [layers.Dense(latent_dim, activation=\"relu\"), layers.Dense(embed_dim),]\n","        )\n","        self.layernorm_1 = layers.LayerNormalization()\n","        self.layernorm_2 = layers.LayerNormalization()\n","        self.layernorm_3 = layers.LayerNormalization()\n","        self.supports_masking = True\n","\n","    def call(self, inputs, encoder_outputs, mask=None):\n","        causal_mask = self.get_causal_attention_mask(inputs)\n","        if mask is not None:\n","            padding_mask = tf.cast(mask[:, tf.newaxis, :], dtype=\"int32\")\n","            padding_mask = tf.minimum(padding_mask, causal_mask)\n","\n","        attention_output_1 = self.attention_1(\n","            query=inputs, value=inputs, key=inputs, attention_mask=causal_mask\n","        )\n","        out_1 = self.layernorm_1(inputs + attention_output_1)\n","\n","        attention_output_2 = self.attention_2(\n","            query=out_1,\n","            value=encoder_outputs,\n","            key=encoder_outputs,\n","            attention_mask=padding_mask,\n","        )\n","        out_2 = self.layernorm_2(out_1 + attention_output_2)\n","\n","        proj_output = self.dense_proj(out_2)\n","        return self.layernorm_3(out_2 + proj_output)\n","\n","    def get_causal_attention_mask(self, inputs):\n","        input_shape = tf.shape(inputs)\n","        batch_size, sequence_length = input_shape[0], input_shape[1]\n","        i = tf.range(sequence_length)[:, tf.newaxis]\n","        j = tf.range(sequence_length)\n","        mask = tf.cast(i >= j, dtype=\"int32\")\n","        mask = tf.reshape(mask, (1, input_shape[1], input_shape[1]))\n","        mult = tf.concat(\n","            [tf.expand_dims(batch_size, -1), tf.constant([1, 1], dtype=tf.int32)],\n","            axis=0,\n","        )\n","        return tf.tile(mask, mult)"],"id":"66b7261a-bd8e-4e53-8ebc-a7a6e23dced9","execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"5649233f-e262-47bc-8cec-d1930f0f1deb","executionInfo":{"status":"ok","timestamp":1627990910708,"user_tz":-540,"elapsed":4260,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["embed_dim = 128\n","latent_dim = 256\n","num_heads = 3\n","vocab_size=len(keras_tokenizer.word_index)+1\n","\n","encoder_inputs = keras.Input(shape=(None,), dtype=\"int32\", name=\"encoder_inputs\")\n","x = PositionalEmbedding(SEQ_LEN, vocab_size, embed_dim)(encoder_inputs)\n","encoder_outputs = TransformerEncoder(embed_dim, latent_dim, num_heads)(x)\n","encoder = keras.Model(encoder_inputs, encoder_outputs)\n","\n","decoder_inputs = keras.Input(shape=(None,), dtype=\"int32\", name=\"decoder_inputs\")\n","encoded_seq_inputs = keras.Input(shape=(None, embed_dim), name=\"decoder_state_inputs\")\n","x = PositionalEmbedding(SEQ_LEN, vocab_size, embed_dim)(decoder_inputs)\n","x = TransformerDecoder(embed_dim, latent_dim, num_heads)(x, encoded_seq_inputs)\n","x = layers.Dropout(0.5)(x)\n","decoder_outputs = layers.Dense(vocab_size, activation=\"softmax\")(x)\n","decoder = keras.Model([decoder_inputs, encoded_seq_inputs], decoder_outputs)\n","\n","decoder_outputs = decoder([decoder_inputs, encoder_outputs])\n","transformer = keras.Model(\n","    [encoder_inputs, decoder_inputs], decoder_outputs, name=\"transformer\"\n",")"],"id":"5649233f-e262-47bc-8cec-d1930f0f1deb","execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ASwSAweEE1ex","executionInfo":{"status":"ok","timestamp":1627990917395,"user_tz":-540,"elapsed":271,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"36ebd532-726a-45c7-afe2-7a33ba42b4cb"},"source":["encoder.summary()"],"id":"ASwSAweEE1ex","execution_count":32,"outputs":[{"output_type":"stream","text":["Model: \"model\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","encoder_inputs (InputLayer)  [(None, None)]            0         \n","_________________________________________________________________\n","positional_embedding (Positi (None, None, 128)         3707264   \n","_________________________________________________________________\n","transformer_encoder (Transfo (None, None, 128)         264320    \n","=================================================================\n","Total params: 3,971,584\n","Trainable params: 3,971,584\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZmS-30XE3hZ","executionInfo":{"status":"ok","timestamp":1627990917797,"user_tz":-540,"elapsed":2,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"881fc15b-3ead-4c87-c933-dc66180ba330"},"source":["decoder.summary()"],"id":"yZmS-30XE3hZ","execution_count":33,"outputs":[{"output_type":"stream","text":["Model: \"model_1\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","decoder_inputs (InputLayer)     [(None, None)]       0                                            \n","__________________________________________________________________________________________________\n","positional_embedding_1 (Positio (None, None, 128)    3707264     decoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","decoder_state_inputs (InputLaye [(None, None, 128)]  0                                            \n","__________________________________________________________________________________________________\n","transformer_decoder (Transforme (None, None, 128)    462464      positional_embedding_1[0][0]     \n","                                                                 decoder_state_inputs[0][0]       \n","__________________________________________________________________________________________________\n","dropout (Dropout)               (None, None, 128)    0           transformer_decoder[0][0]        \n","__________________________________________________________________________________________________\n","dense_4 (Dense)                 (None, None, 28363)  3658827     dropout[0][0]                    \n","==================================================================================================\n","Total params: 7,828,555\n","Trainable params: 7,828,555\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"375cecac-3a11-448d-86ad-238dce349a07","executionInfo":{"status":"ok","timestamp":1627990918164,"user_tz":-540,"elapsed":3,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"50af679e-4105-4a53-ab90-cc29126cb1d3"},"source":["transformer.summary()"],"id":"375cecac-3a11-448d-86ad-238dce349a07","execution_count":34,"outputs":[{"output_type":"stream","text":["Model: \"transformer\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","encoder_inputs (InputLayer)     [(None, None)]       0                                            \n","__________________________________________________________________________________________________\n","positional_embedding (Positiona (None, None, 128)    3707264     encoder_inputs[0][0]             \n","__________________________________________________________________________________________________\n","decoder_inputs (InputLayer)     [(None, None)]       0                                            \n","__________________________________________________________________________________________________\n","transformer_encoder (Transforme (None, None, 128)    264320      positional_embedding[0][0]       \n","__________________________________________________________________________________________________\n","model_1 (Functional)            (None, None, 28363)  7828555     decoder_inputs[0][0]             \n","                                                                 transformer_encoder[0][0]        \n","==================================================================================================\n","Total params: 11,800,139\n","Trainable params: 11,800,139\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"67499d34-fc63-4f2c-b0c5-52d0b1cb8305","executionInfo":{"status":"ok","timestamp":1627990924953,"user_tz":-540,"elapsed":255,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.compile(\n","    \"adam\", loss=\"sparse_categorical_crossentropy\", metrics=[\"accuracy\"]\n",")"],"id":"67499d34-fc63-4f2c-b0c5-52d0b1cb8305","execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"rT-wNh3MLJYW","executionInfo":{"status":"ok","timestamp":1627990927315,"user_tz":-540,"elapsed":315,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["# transformer.load_weights(\"./transformer_weight.h5\")"],"id":"rT-wNh3MLJYW","execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"1c27758a-8d00-4c0a-83fd-9fbe748177b4","executionInfo":{"status":"error","timestamp":1627990960622,"user_tz":-540,"elapsed":15996,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}},"outputId":"eefbd95f-be1b-48ee-ecac-e1ae596d6206"},"source":["transformer.fit(x=(encoder_inputs_X, decoder_inputs_Y), y=decoder_outputs_Y, batch_size=64, epochs=10)"],"id":"1c27758a-8d00-4c0a-83fd-9fbe748177b4","execution_count":37,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n"],"name":"stdout"},{"output_type":"error","ename":"ResourceExhaustedError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mResourceExhaustedError\u001b[0m                    Traceback (most recent call last)","\u001b[0;32m<ipython-input-37-6ce4ad8dec09>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtransformer\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mencoder_inputs_X\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdecoder_inputs_Y\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdecoder_outputs_Y\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1181\u001b[0m                 _r=1):\n\u001b[1;32m   1182\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1183\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1184\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1185\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    887\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    888\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 889\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    890\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    891\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    948\u001b[0m         \u001b[0;31m# Lifting succeeded, so variables are initialized and we can run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    949\u001b[0m         \u001b[0;31m# stateless function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 950\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    951\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    952\u001b[0m       \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfiltered_flat_args\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m\\\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3022\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[1;32m   3023\u001b[0m     return graph_function._call_flat(\n\u001b[0;32m-> 3024\u001b[0;31m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[0m\u001b[1;32m   3025\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3026\u001b[0m   \u001b[0;34m@\u001b[0m\u001b[0mproperty\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1959\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1960\u001b[0m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0;32m-> 1961\u001b[0;31m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[0m\u001b[1;32m   1962\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n\u001b[1;32m   1963\u001b[0m         \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    594\u001b[0m               \u001b[0minputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    595\u001b[0m               \u001b[0mattrs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mattrs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 596\u001b[0;31m               ctx=ctx)\n\u001b[0m\u001b[1;32m    597\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    598\u001b[0m           outputs = execute.execute_with_cancellation(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     58\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0;32m---> 60\u001b[0;31m                                         inputs, attrs, num_outputs)\n\u001b[0m\u001b[1;32m     61\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mname\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mResourceExhaustedError\u001b[0m: 2 root error(s) found.\n  (0) Resource exhausted:  OOM when allocating tensor with shape[64,600,28363] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n\t [[node transformer/model_1/dense_4/Softmax (defined at <ipython-input-37-6ce4ad8dec09>:1) ]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n\n\t [[gradient_tape/transformer/positional_embedding/embedding/embedding_lookup/Reshape/_150]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n\n  (1) Resource exhausted:  OOM when allocating tensor with shape[64,600,28363] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc\n\t [[node transformer/model_1/dense_4/Softmax (defined at <ipython-input-37-6ce4ad8dec09>:1) ]]\nHint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.\n\n0 successful operations.\n0 derived errors ignored. [Op:__inference_train_function_5274]\n\nFunction call stack:\ntrain_function -> train_function\n"]}]},{"cell_type":"code","metadata":{"id":"8e0ac093-6b26-46cb-b619-9ac0b81ecef9","executionInfo":{"status":"aborted","timestamp":1627990698659,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.save_weights(\"./transformer_weight_berttkn_adam.h5\")"],"id":"8e0ac093-6b26-46cb-b619-9ac0b81ecef9","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"h8zb8TgF9ffJ","executionInfo":{"status":"aborted","timestamp":1627990698659,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["transformer.load_weights(\"./transformer_weight_berttkn.h5\")"],"id":"h8zb8TgF9ffJ","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PtSuV5pwMeee","executionInfo":{"status":"aborted","timestamp":1627990698659,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["def decode_title(input_sentence):\n","  decoder_sentence = \"[CLS]\"\n","  input_sentence = \" \".join(tokenizer.tokenize(input_sentence))\n","  encoder_sentence_ = keras_tokenizer.texts_to_sequences([input_sentence])\n","  encoder_sentence_ = pp.sequence.pad_sequences(encoder_sentence_, maxlen=SEQ_LEN, padding=\"post\", truncating=\"post\")\n","  for i in range(30):\n","    decoder_sentence_ = keras_tokenizer.texts_to_sequences([decoder_sentence])\n","    decoder_sentence_ = pp.sequence.pad_sequences(decoder_sentence_, maxlen=SEQ_LEN, padding=\"post\", truncating=\"post\")\n","    pred = transformer((encoder_sentence_, decoder_sentence_))\n","    sampled_tkn_idx = np.argmax(pred[0,i,:])\n","    sampled_tkn = keras_tokenizer.index_word[sampled_tkn_idx]\n","    decoder_sentence =  decoder_sentence + \" \" + sampled_tkn\n","    if sampled_tkn == \"[SEP]\":\n","      break\n","  return \"\".join(re.sub(\"#\", \"\", decoder_sentence).split(\" \")[1:-1])"],"id":"PtSuV5pwMeee","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UPPBudA4QTiv","executionInfo":{"status":"aborted","timestamp":1627990698660,"user_tz":-540,"elapsed":19,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["idx = 3333\n","print(datasets[idx][0])\n","print(\"↓\")\n","print(decode_title(datasets[idx][0]))\n","print(\"↓\")\n","print(datasets[idx][1])"],"id":"UPPBudA4QTiv","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jytx7fKSOnxH","executionInfo":{"status":"aborted","timestamp":1627990698660,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["news_sample = '''比嘉愛未（35）主演の連ドラ「推しの王子様」（フジテレビ系木曜夜10時）。乙女ゲームを手がけるベンチャー企業の女社長・泉美が、自身の理想通りにつくった推しキャラのケント様にそっくりな航（渡辺圭祐＝27）に出会うことで始まる物語だが、当初主演予定だった深田恭子（38）が適応障害で休業することを公表し、降板。急きょ代役で泉美を演じることになったのが、比嘉だ。\n","\n","比嘉愛未「2行のセリフ」が言えなかった駆け出し時代\n","\n","「最近の代役といえば、NHK大河『麒麟がくる』でしょう。沢尻エリカの代役で、川口春奈が帰蝶を演じましたが、ふたを開けてみると、〈川口でよかった〉の声がほとんどだった。『推しの王子様』の比嘉も、初回を見る限り、そういう評価になりそうな予感がします。仕事ができる女社長役って、深田よりむしろ比嘉の方がハマる気がしますもんね」（ドラマ制作会社スタッフ）'''"],"id":"jytx7fKSOnxH","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iBtFkb6vOtcp","executionInfo":{"status":"aborted","timestamp":1627990698660,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["news_sample = re.sub(r\"\\s\", \"\", news_sample)\n","news_sample = re.sub(\"\\u3000\", \"\", news_sample)\n","news_sample"],"id":"iBtFkb6vOtcp","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"H8_FLJcvO-ir","executionInfo":{"status":"aborted","timestamp":1627990698660,"user_tz":-540,"elapsed":18,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["decode_title(news_sample[0:400])"],"id":"H8_FLJcvO-ir","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SGrFWKmMQX33","executionInfo":{"status":"aborted","timestamp":1627990698661,"user_tz":-540,"elapsed":19,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["re.sub().split(\" \")[1:-1]"],"id":"SGrFWKmMQX33","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KPVbm1NxN_uK","executionInfo":{"status":"aborted","timestamp":1627990698661,"user_tz":-540,"elapsed":19,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":["re.sub?"],"id":"KPVbm1NxN_uK","execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"hMx9de2vOAzZ","executionInfo":{"status":"aborted","timestamp":1627990698661,"user_tz":-540,"elapsed":19,"user":{"displayName":"k g.","photoUrl":"","userId":"01082649767351199152"}}},"source":[""],"id":"hMx9de2vOAzZ","execution_count":null,"outputs":[]}]}